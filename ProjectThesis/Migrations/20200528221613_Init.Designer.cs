// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ProjectThesis.ViewModels;

namespace ProjectThesis.Migrations
{
    [DbContext(typeof(ThesisDbContext))]
    [Migration("20200528221613_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("ProjectThesis.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("ProjectThesis.Models.FieldOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FieldOfStudy");
                });

            modelBuilder.Entity("ProjectThesis.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DegreeCycle");

                    b.Property<int>("FacultyID");

                    b.Property<int>("StudentNo");

                    b.Property<int>("SupID");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("FacultyID");

                    b.HasIndex("SupID");

                    b.HasIndex("UserID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ProjectThesis.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FacID");

                    b.Property<int>("StudentLimit");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("FacID");

                    b.HasIndex("UserID");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("ProjectThesis.Models.Thesis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DegreeCycle");

                    b.Property<int>("FosID");

                    b.Property<int>("StudentID");

                    b.Property<string>("Subject");

                    b.Property<int>("SupID");

                    b.HasKey("Id");

                    b.HasIndex("FosID");

                    b.HasIndex("StudentID")
                        .IsUnique();

                    b.HasIndex("SupID");

                    b.ToTable("Thesis");
                });

            modelBuilder.Entity("ProjectThesis.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("FacultyID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasIndex("FacultyID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectThesis.Models.Student", b =>
                {
                    b.HasOne("ProjectThesis.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.Supervisor", "Sup")
                        .WithMany("Students")
                        .HasForeignKey("SupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectThesis.Models.Supervisor", b =>
                {
                    b.HasOne("ProjectThesis.Models.Faculty", "Fac")
                        .WithMany()
                        .HasForeignKey("FacID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectThesis.Models.Thesis", b =>
                {
                    b.HasOne("ProjectThesis.Models.FieldOfStudy", "Fos")
                        .WithMany()
                        .HasForeignKey("FosID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.Student", "Student")
                        .WithOne("ChosenThesis")
                        .HasForeignKey("ProjectThesis.Models.Thesis", "StudentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.Supervisor", "Sup")
                        .WithMany("Theses")
                        .HasForeignKey("SupID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectThesis.Models.User", b =>
                {
                    b.HasOne("ProjectThesis.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
