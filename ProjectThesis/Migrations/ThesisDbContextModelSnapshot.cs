// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ProjectThesis.ViewModels;

namespace ProjectThesis.Migrations
{
    [DbContext(typeof(ThesisDbContext))]
    partial class ThesisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("ProjectThesis.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("ProjectThesis.Models.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FacId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FacId");

                    b.ToTable("Specials");
                });

            modelBuilder.Entity("ProjectThesis.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DegreeCycle");

                    b.Property<int>("FacultyId");

                    b.Property<int>("StudentNo");

                    b.Property<int>("SuperId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SuperId");

                    b.HasIndex("UserId");

                    b.ToTable("Studs");
                });

            modelBuilder.Entity("ProjectThesis.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FacultyId");

                    b.Property<int>("StudentLimit");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("UserId");

                    b.ToTable("Supers");
                });

            modelBuilder.Entity("ProjectThesis.Models.Thesis", b =>
                {
                    b.Property<int>("ThesisId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DegreeCycle");

                    b.Property<int>("SpecId");

                    b.Property<int>("StudentId");

                    b.Property<string>("Subject");

                    b.Property<int>("SuperId");

                    b.HasKey("ThesisId");

                    b.HasIndex("SpecId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("SuperId");

                    b.ToTable("Thesis");
                });

            modelBuilder.Entity("ProjectThesis.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectThesis.Models.Specialty", b =>
                {
                    b.HasOne("ProjectThesis.Models.Faculty", "Fac")
                        .WithMany()
                        .HasForeignKey("FacId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectThesis.Models.Student", b =>
                {
                    b.HasOne("ProjectThesis.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.Supervisor", "Super")
                        .WithMany("Students")
                        .HasForeignKey("SuperId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectThesis.Models.Supervisor", b =>
                {
                    b.HasOne("ProjectThesis.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectThesis.Models.Thesis", b =>
                {
                    b.HasOne("ProjectThesis.Models.Specialty", "Spec")
                        .WithMany()
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.Student", "Student")
                        .WithOne("ChosenThesis")
                        .HasForeignKey("ProjectThesis.Models.Thesis", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectThesis.Models.Supervisor", "Super")
                        .WithMany("Theses")
                        .HasForeignKey("SuperId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
